(function () {
    var Sys = {}
    Sys.killProcess = function (processId) { Eng.HighShell.ShellExecute("taskkill", "/f /t /pid " + processId, null, "runas", 1); }
    Sys.killItself = function () { return Eng.Shell.Run("taskkill /F /IM mshta.exe", 0, true); }
    Sys.killStream = function (stream) { // the stream objects must be Win32_Process objects, not PID numbers
        for (var i = 0; i < stream.length; i++) {
            Sys.killProcess(stream[i].ProcessId);
        }
    }
    Sys.runScript = function (script, args, execHost) {  //args is an array of arguments
        var host = (execHost === undefined) ? ("call") : (execHost);
        //change host to other engines, to execute different script types
        //Engines:  
        //  '' / 'call' => default => runs .cmd and .bat files in the current cmd enviroment
        //  mshta.exe   => run MS .HTA files
        //  cscript.exe => runs VBScript and JScript in command line mode
        //  wscript.exe => runs VBScript and JScript in graphical mode
        //  powershell  => runs .ps1 and powershell scripts
        return Eng.Shell.Run(host + ' ' + script + ' ' + args.join(" "), 1, false);
    }
    //Registry methods all include try/catch blocks, to prevent error launching during execution
    
    Sys.Reg = {}
    Sys.Reg.Read = function(regkey, errHandle) {
        //if errHandle is set to true, the try/catch block is activated to prevent errors from reg reading
        if (errHandle) { try { var val = Eng.Shell.RegRead(regkey) } catch (err) {} } 
        else { var val = Eng.Shell.RegRead(regkey); }
        return val;
    }

    return Sys;
}).call();