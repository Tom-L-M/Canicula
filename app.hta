<!DOCTYPE HTML>
<html>
    <head>
        <HTA:APPLICATION 
            ID="eHTA" 
            APPLICATIONNAME="canicula"
            NAVIGABLE="yes"
            ICON="./assets/appicon.ico.canicon" 
            MINIMIZEBUTTON="no"
            MAXIMIZEBUTTON="no" 
            BORDER="dialog" 
            BORDERSTYLE="normal" 
            CAPTION="yes"
            CONTEXTMENU="no"
            SHOWINTASKBAR="yes" 
            INNERBORDER="no"
            SCROLL="no" 
            SCROLLFLAT="no"
            SINGLEINSTANCE="yes"
            SELECTION="no"
            SYSMENU="no"
            WINDOWSTATE="normal"
            VERSION="1.0"
        ></HTA:APPLICATION> 
        <title> Canicula </title>
        <!-- <meta http-equiv="x-ua-compatible" content="IE=9" /> Adds Suport to JSON BUT REMOVES SUPPORT TO PROCESSES WITH GetObject()-->
        <link rel="stylesheet" href="./styles/global.cancss">

    </head>
    <body>
        <script language="JavaScript">
            var Import = function (f) { return eval((new ActiveXObject("Scripting.FileSystemObject")).OpenTextFile(f, 1).ReadAll()); } //This is needed to import other modules
            // Modules (path reference is 'app.hta')          // # Dependencies    # Name                 # Description
            // Zero-Level Modules
            var Polyfill = Import('./core/polyfill.canscript');
            var Crypto = Import('./libs/crypto.canscript');         // ; []              ; Crypto               ; Namespace for SHA-256 hashing and criptographic resources
            // Core Modules
            var Eng = Import('./core/eng.canscript');               // ; []              ; Engines              ; Includes ActiveX Engine objects (Shell and Fso)
            var Dbs = Import('./core/dbs.canscript');               // ; []              ; Databases            ; Database methods 
            var Cfg = Import('./core/cfg.canscript');               // ; []              ; Configs              ; Configurations file
            var Trg = Import('./core/trg.canscript');               // ; [sys]           ; Trigger              ; Application triggers to kill processes
            // Low-Level Modules (core-only dependencies)
            var Vws = Import('./core/vws.canscript');               // ; [cfg]           ; App View             ; App views rendering custom methods
            var Fso = Import('./core/fso.canscript');               // ; [eng]           ; FileSysObject        ; FileSystemObject custom methods
            var Htt = Import('./core/htt.canscript');
            var Env = Import('./core/env.canscript');               // ; [eng]           ; Environment          ; Environment custom methods
            var Sys = Import('./core/sys.canscript');               // ; [eng]           ; System               ; System custom methods
            var KNN = Import('./core/knn.canscript');
            // Test-Level Modules (experimental)
            var TEST = Import('./test/testlog.canscript'); //TODO: Test deps
            // High-Level Modules (many dependencies)
            var KNNutils   = Import('./func/knnutils.canscript');
            var ProcSUtils = Import('./func/procsutils.canscript'); // ; [cfg,eng]       ; ProcSentry utils
            var FileSUtils = Import('./func/filesutils.canscript'); // ; [cfg,eng,env]   ; FileSentry utils 
            var ProcSentry = Import('./func/procsentry.canscript'); // ; [cfg,trg,vws]   ; ProcSentry manager 
            var FileSentry = Import('./func/filesentry.canscript'); // ; [cfg,trg,vws]   ; FileSentry manager 
            // Top-Level Modules
            var App = Import('./core/app.canscript');
            //TODO: create a function that verifies the software integrity before starting, getting the hash of all files, and comparing with an hash kept in a file
            //TODO: Create a function that uses the Save() method to create a shortcut to the application on the desktop
            // [https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/scripting-articles/k5x59zft(v=vs.84)]
            //TODO: Verificar se existe mais de um drive (buscar pelo 'D' e 'E') e se houver, mapear um certo número de locais para posicionar decoys, de forma a proteger todos os drives locais (remotos não)
        </script>
        <script language="JavaScript"> window.onload = function() { App.RunOnStart(); return 0; } </script>

        <div class="header">
            <div class="topbar">
                <button class="exit-button" onclick="App.Close();" language="JavaScript"> &nbsp; &nbsp; Exit &nbsp; &nbsp; </button> &nbsp;&nbsp;&nbsp;&nbsp; 
                <button id="sentry-start" onclick="App.StartAllServices();" language="JavaScript"> Start Protection </button> 
                <button id="sentry-stop" onclick="App.StopAllServices();" language="JavaScript"> Stop Protection </button>  <br /><br />
            </div>
        </div>

        <div class="container">
            <!-- <div class="service-starters">
                <div id="filesentry-start-container">
                    <button id="filesentry-start" onclick="App.StartService('filesentry');" language="JavaScript">  Start file sentry <img class="icon" src=""/>  </button>   
                    <button id="filesentry-kill" disabled onclick="App.StopService('filesentry', true);">  Kill file sentry <img class="icon" src=""/>  </button>     
                </div>
                <div id="procsentry-start-container">
                    <button id="procsentry-start" onclick="App.StartService('procsentry');" language="JavaScript">  Start process sentry <img class="icon" src=""/>  </button>   
                    <button id="procsentry-kill" disabled onclick="App.StopService('procsentry', true);">  Kill process sentry <img class="icon" src=""/>  </button>     
                </div>
            </div> -->
            <div class="service-status"> 
                <p id="filesentry-status-label"> File Sentry: </p>
                <div id="filesentry-status"></div> 
                
                <p id="procsentry-status-label"> Process Sentry: </p>
                <div id="procsentry-status"></div> 
            </div>

            <br/><span>Configs:</span><br/>
            <code id="config-status"></code>
        </div>

        <!-- TODO: TESTING -->
        <!-- <button onclick="App.Version.Update()" language="JavaScript"> Update </button>   
        <button onclick="alert(Sys.Reg.Read('HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\Steam', true))" language="JavaScript"> Reg Read </button> -->
    </body>
</html>
